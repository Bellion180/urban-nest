generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Torres {
  id_torre      String          @id @default(cuid())
  letra         String
  descripcion   String?
  imagen        String?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  departamentos Departamentos[]
  niveles       Niveles[]

  @@map("torres")
}

model Niveles {
  id_nivel      String          @id @default(cuid())
  nombre        String
  numero        Int
  id_torre      String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  imagen        String?         @db.VarChar(255)
  departamentos Departamentos[]
  torre         Torres          @relation(fields: [id_torre], references: [id_torre], onDelete: Cascade)

  @@index([id_torre], map: "niveles_id_torre_fkey")
  @@map("niveles")
}

model User {
  id         String       @id @default(cuid())
  email      String       @unique
  name       String?
  password   String
  role       Role         @default(ADMIN)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  companeros Companeros[]

  @@map("users")
}

model Departamentos {
  id_departamento String       @id @default(cuid())
  no_departamento String
  nombre          String
  descripcion     String?
  id_torre        String?
  id_nivel        String?
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  companeros      Companeros[]
  nivel           Niveles?     @relation(fields: [id_nivel], references: [id_nivel])
  torre           Torres?      @relation(fields: [id_torre], references: [id_torre])

  @@index([id_nivel], map: "departamentos_id_nivel_fkey")
  @@index([id_torre], map: "departamentos_id_torre_fkey")
  @@map("departamentos")
}

model Info_Tlaxilacalli {
  id_Tlax          String     @id @default(cuid())
  Excedente        Int?
  Aport            Int?
  Deuda            Int?
  Estacionamiento  Int?
  Aportacion       Int?
  Aportacion_Deuda Int?
  Apoyo_renta      String?    @db.VarChar(255)
  Comentarios      String?    @db.VarChar(255)
  id_compañeros   String     @unique
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  companero        Companeros @relation(fields: [id_compañeros], references: [id_companero], onDelete: Cascade)

  @@map("info_tlaxilacalli")
}

model Info_Financiero {
  id_flux          String     @id @default(cuid())
  excelente        String?    @db.VarChar(10)
  aport            String?    @db.VarChar(10)
  deuda            String?    @db.VarChar(10)
  estacionamiento  String?    @db.VarChar(10)
  aportacion       String?    @db.VarChar(10)
  aportacion_deuda String?    @db.VarChar(10)
  apoyo_renta      String?    @db.VarChar(10)
  comentarios      String?    @db.Text
  id_companeros    String     @unique
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  companero        Companeros @relation(fields: [id_companeros], references: [id_companero], onDelete: Cascade)

  @@map("info_financiero")
}

model Companeros {
  id_departamento   String?
  createdById       String
  id_companero      String             @id @default(cuid())
  nombre            String
  apellidos         String
  fecha_nacimiento  DateTime?
  no_personas       Int?
  no_des_per        Int?               @default(0)
  recibo_apoyo      String?            @db.VarChar(10)
  no_apoyo          Int?
  estatus           Status             @default(ACTIVO)
  profilePhoto      String?            @db.VarChar(255) // Campo para foto de perfil
  documentos        Json?              // Campo JSON para múltiples documentos
  documentoIne      String?            @db.VarChar(500) // INE
  documentoCurp     String?            @db.VarChar(500) // CURP
  documentoComprobanteDomicilio String? @db.VarChar(500) // Comprobante de domicilio
  documentoActaNacimiento String?      @db.VarChar(500) // Acta de nacimiento
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  createdBy         User               @relation(fields: [createdById], references: [id], onDelete: Cascade)
  departamento      Departamentos?     @relation(fields: [id_departamento], references: [id_departamento])
  financieros       Financieros[]
  info_financiero   Info_Financiero?
  info_tlaxilacalli Info_Tlaxilacalli?
  invi              INVI?

  @@index([createdById], map: "companeros_createdById_fkey")
  @@index([id_departamento], map: "companeros_id_departamento_fkey")
  @@map("companeros")
}

model INVI {
  id_invi           Int        @id @default(autoincrement())
  Mensualidades     String?
  fecha_de_contrato String?
  deuda             Int?
  id_companero      String     @unique
  companero         Companeros @relation(fields: [id_companero], references: [id_companero], onDelete: Cascade)

  @@map("invi")
}

model Financieros {
  id_financieros String     @id @default(cuid())
  veladas        String?    @db.VarChar(255)
  aportaciones   String?    @db.VarChar(255)
  faenas         String?    @db.VarChar(255)
  salidas        String?    @db.VarChar(255)
  id_compañeros String
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  companero      Companeros @relation(fields: [id_compañeros], references: [id_companero], onDelete: Cascade)

  @@index([id_compañeros], map: "financieros_id_compañeros_fkey")
  @@map("financieros")
}

enum Role {
  ADMIN
  RESIDENT
}

enum Status {
  ACTIVO
  SUSPENDIDO
  INACTIVO
}
